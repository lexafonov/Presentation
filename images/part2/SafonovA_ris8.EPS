%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: -39 39 541 541 
%%LanguageLevel: 3
%%Creator: CorelDRAW X7
%%Title: SafonovA_ris8.EPS
%%CreationDate: Tue Nov 15 13:58:24 2022
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 3 def
%Build: CorelDRAW X7 Версия 17.6.0.1021
/EpsFile true def
%%BeginResource: procset wCorel17Dict 17.0 0
/wCorel17Dict 300 dict def wCorel17Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Text support
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch 0 1 $fe length 1 sub{/encodingIndex xd dup
$fe encodingIndex get eq{$fe encodingIndex/.notdef put}if}for put 1 add}ifelse
}forall pop}if dup 256 dict dup/$met xd/Metrics exch put dup/FontMatrix get 0
get 1000 mul 1 exch div 3 index length 256 eq{0 1 255{dup $fe exch get dup
/.notdef eq{pop pop}{5 index 3 -1 roll get 2 index mul $met 3 1 roll put}
ifelse}for}if pop definefont pop pop}bd/CorelIsValidCharpath{pathbbox 3 -1 roll
sub abs 0.5 ge 3 1 roll sub abs 0.5 ge and}bd/@ftx{{currentpoint 3 -1 roll(0)
dup 3 -1 roll 0 exch put dup @gs true charpath $ctm setmatrix
CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/gradient_fill ld @ftx}{$fil 3 eq{/@@txt
/@Pf ld @ftx}{$fil 4 eq{/@@txt/output_shading_gradient ld @ftx}{FillOverprint
safe_setoverprint FillColor/separate_set_color dexec{show}{pop}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix
currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint
safe_setoverprint OutlineColor/separate_set_color dexec{{currentpoint 3 -1 roll
(0)dup 3 -1 roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat
stroke @gr @np stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr
@st}bd/@t@a{dup @gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}
def}bd/o{/t{pop}def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm
setmatrix/$ttm matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll
m $ttm concat ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd
/@l{}bd/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null
def/_bithibyte 0 def
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel17Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%BeginResource: font ArialMT
%!FontType1-1.0: ArialMT 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /ArialMT def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 97 /a putdup 115 /s putdup 116 /t putdup 114 /r putdup 103 /g putdup 109 /m putdup 48 /zero putdup 50 /two putdup 49 /one putdup 47 /slash putdup 52 /four putdup 54 /six putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B1AA6594385397F296436F7BAA13328530ED273231DE8E7C75E371334E513B2691204EC1C65EB547271CF01
B2A84FF905D1CDDCA41F873C2A698E5BD03CDB2F3D75E168B291469A326B314FF31DD752C0CFD072389CFED0A3CDA5E241E2E7F142B468A955A35F6123281C28
511CABE9F53E28B2FBBBE2549078F004CB333B3EF640B2DD033A494C0C414C3B191461DF44C626E5A7D2DEE59008E5A6BBD5D6CA205A40BBD256CC70F6DA3DF1
055429AC1BE0A5646304FA9E39198C7B5E3B2772EB09F0D79418880A02BAA11C67BB8B522BAB05C90061AA9B9E871DA3375B0FEF3DAD4B1AE95B78303C171E19
835E03C38BBF680A873ADFF7EDBA0603C32270CC322A9539D68DF1D2E1432AD94F6EC7B23135A67D4EDC7C9A2BC6FE05CF203644E8DC9407833017B499959BDA
62A7828246B41C7469BEA3C2AA76E48395C3ED17CA57BFCA67F2CCD0D2602B465F6C3073BB4B5B7CC6F6EE316F315FD76F922691A0D6B1EF0A1B2B092730F624
CCCA82FEEFD1550E6DA33BAD26F5D6C2618DF582172C278D2086C560B720C58E9754FE1931BFB72041A12CD7D7A02D135C4389775CBB14AB8A392A863C6764C5
BC059A596CC4FCE74521B98AC8B49E795D1E5116B28C1D5BD109CEEF3A523A198E69DC088FDA8C6D1B36C11EC82F9CDDF20F37F84AA6DC4EE6EE6289C1888A3B
DC8A7965047714259976E80B8C66CEEB3FF01414A744EEADE4F711544C5CC5CD094902D68281F7F1B42B48461D16E0953218427E79AD634683A9BF026CB3AB35
84AD3EF3B7D2E65A232A5753423BFFA741D3C59AF9645A79DADAA39E8A28EAF772590728DAE7C3859D725C8F76526144126673B4C95357F755D0D9AF9E9A8DAD
BE3F3D7ADF4A413C80492CEC883ACCC96B05AD3D33339D9398AC25E7434C4312592F99FF419FF0EE547A3F8A1A13EBAE939FB59DD3519777EB0FF77CFFF4AB1E
1007298EA446B4AD8A4F6C1B3BE58FD11865CB8D2CF8F2F97C62D52F2652E50BACBE2B2B44377CA8D836E5532B96766E73B52C1A2FBD7EE29E3CC8B57410DD18
53B20C144F10EB387EB9FC708CD7682029A81F95CDF065DBF2244D6F199922224DC8AC36FB7FA9D8514E43C3AB10906C23B774F9C55C8FB9F93B5B38D32E6C93
84DF86C29B9121807C5318F0E43C4E062226B46F711B89BEEBCBED04B481B46D0F4A61E918BF5CAD8DC96FB6CD6DB0B9A3F4F894C95575317EAD25C9BE3BBB95
BA592285DC1DD01DD6720EAF7A44F47CA33AD70C51F96301C009CD311CF8A010974A27CD2D9F90D92AF2F054544F2417B4746B2B2F883D9B9DAA3488C2EEB798
88F87C81E83DEE0663BDDA8950636B34669D1270651BAA543B4C33FC93B8AB0C57DC2A3C6B0F326D4E0A9FC5A2083669B88392AA04E17D20379996427F630824
A947CFAEF559E7E22F7A2B4BAE3EE90807B5499B4F55F621BFE6270CC02B604B15201926814D369EB0D2D9D82210037515FA305BF1D076A2207BFEFE939EE5D9
21DE396A0099F478C950F9770E18056E60C9DC3F58D79950FA2E202400E9D55661730104D6DE5578E3271F302980F98BB98E6E9A1AB414B21347BC811D7101AC
3BE91595063E3525554773E935DE5745DAA832629A679AA7150A3A0C89C822C68AC3194BEE76607A0D7ABA522C665CBED8CC37E4E33D0D585D1C2AF2E3F7D163
690132F8A0396E8901677D5345185A3D79ABD939A68AB238CFB2A83DE977B8B95200DBB9F83DA1445742B22B504BA55398FED939D666837D2142C844FFE82D92
050E7F6755E629BE30673D90225504CE97465C32098BA0412B7B9124D5B6ECF498D215198C1C0797316EB5B2C70846C4FCCAA4F977EE0D40D5104C692D6909F0
047BF56DB82951774A04FE62C48FFB5B0A2B607D2F362332EE7766C850B649B36E415AB99B9F46B18F05CAFDD143A0CC2EA6C59C6B6261CAF1DD2CE4ADDE5F59
E5C02234D315DDEB3A59EAA7230D84D48AC60CA290CD1C85D76EBD534984A9039BA60A1DB71CA38DD3F849E02AEDC553B5E8E657655E9CB5B40F6748721431E6
35D4F9E8A974DFA11C32526BA79022D71C3DAC6DA9CBA6D9795F77041D6D4E916D02464F0015A5218A6BF628E3E7A6B801AE92C1343D8CA95C107892B3EDBBF2
BBF49115E9895380C3A3CF591AFB6656E15AA59C9D809241D563E91FF9209C623B81ACE9513052B5F30B210948EC071A1BA1FC3E293C7FD07B89D3F5D71D1EEA
E00B01FAC3A804060ADADD108FFD6D1662F46A9A4691F760A49A2CCE7D828041FDC1DBC44DE03D21C98A45A55F06417E410B809A78C2F5F5C636F32F26BBC518
415BFED59BCB752CC84CEAB4F51974DD46D1F15B56761B26D92688C95544DE736F56EA3247C8EC67B80A7FC74A4B26E46C9535490D118249B26BB87D2C5A7A78
00B9D145BF432DF681636B2CC22DF8C923CBA7412215E672EC9B5BA156F63BB6DB16D9928C07B64155D7440DD4ACE115E8C55501F3FF15BDEC0AC20B0E846DEE
948CE6CE2E5209CBAFD6F31B395634201ADBE2D1AD708D04D2CD4937BA89B25BA2CD82361FB40FE7A3376D2D532C9AAFEFCACB2B4B90C51B6FEBDA55812C70D8
7CF116C97052A9ACDC7BE51FDD255B8350D090821EDC7D3008BD8F57AB61B9F40EEB4F3F8842CEE20F4F8485CC45B4F078FCF02B52EC99DD7573C940CAA5E9E7
8A02D67AAD9B95AF0289ABE36355C3F998CDEA38487A893880399ADAFF6E356B6C4CB921A27EAE6B4A75CDAE35A8A5D68397BDBF883CF67A40189EA9301B7023
E27E91D8C37084AAADC2815F71AF8BDE1A582D7540F7AE213AE39763A368C6915E2E8141F9AB7E99B7D55E605EDE7B8706331C9C405A4856ECDF51CBB9C2232A
5533242F2BDF0D49914F2E4E31F910D5C30ED34479F5EB2088E5EC70EBC6B7E08654D9255E56BCCFE5B67F3C522617134CBAEAFB5F39E0B0AE3C917F24004BA4
FE98F0D314CE331064903476C1
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 
750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 278 
278 355 556 556 889 667 191 333 333 389 584 278 333 278 278 556 
556 556 556 556 556 556 556 556 556 278 278 584 584 584 556 1015 
667 667 722 722 667 611 778 722 278 500 667 556 833 722 778 667 
778 722 667 611 722 667 944 667 667 611 278 278 278 469 556 333 
556 556 500 556 556 278 556 556 222 222 500 222 833 556 556 556 
556 333 500 278 556 500 722 500 500 500 334 260 334 584 750 865 
542 222 365 333 1000 556 556 556 1000 1057 333 1010 583 854 719 556 
222 222 333 333 350 556 1000 750 1000 906 333 813 438 556 552 278 
635 500 500 556 489 260 556 668 737 719 556 584 333 737 278 400 
549 278 222 411 576 537 333 556 1073 510 556 222 667 500 278 667 
656 667 542 677 667 923 604 719 719 583 656 833 722 778 719 667 
722 611 635 760 667 740 667 917 938 792 885 656 719 1010 722 556 
573 531 365 584 556 669 459 559 559 438 584 688 552 556 542 556 
500 458 500 823 500 573 521 802 823 625 719 521 510 750 542 ]
CorelDrawReencodeVect /_R1336934584666-ArialMT /ArialMT Z

%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 501 580
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
5.53351 100.15483 5.53465 531.45808 @E
/$fm 1 def
0 J 0 j 3.863690092612248 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 2.00013 2.00013 -90.00000 @w
5.53408 531.45808 m
5.53408 100.15483 L
S

@rax %Note: Object
1.53411 530.79194 9.53433 540.79200 @E
/$fm 0 def
 0 O 0 @g
0.0000  create_grayscale_color set_solid_fill
5.53408 530.79194 m
1.53411 530.79194 L
5.53408 540.79200 L
9.53433 530.79194 L
5.53408 530.79194 L
@c
F

@rax %Note: Object
5.40397 100.78469 462.57704 101.19827 @E
/$fm 0 def
0 J 0 j 3.863690092612248 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 2.00013 2.00013 -90.00000 @w
5.40397 100.78469 m
462.57704 101.19827 L
S

@rax %Note: Object
461.91118 97.19802 471.91124 105.19824 @E
/$fm 0 def
 0 O 0 @g
0.0000  create_grayscale_color set_solid_fill
461.91118 101.19827 m
461.91118 105.19824 L
471.91124 101.19827 L
461.91118 97.19802 L
461.91118 101.19827 L
@c
F

@rax %Note: Object
73.36120 155.11209 455.27414 519.28498 @E
/$fm 0 def
0 J 0 j 3.863690092612248 setmiterlimit
[] 0 d 0 R 0 @G
0.5882  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 5.66929 5.66929 -90.00000 @w
73.36120 519.28498 m
81.90907 366.10696 292.06800 158.01420 455.27414 155.11209 C
S

@rax %Note: Object
59.40397 135.28517 450.40422 511.28504 @E
/$fm 0 def
0 J 0 j 3.863690092612248 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 2.99991 2.99991 -90.00000 @w
59.40397 511.28504 m
73.49102 291.45798 194.41304 149.95616 450.40422 135.28517 C
S

@rax %Note: Object
19.40400 101.31902 451.40400 509.28520 @E
/$fm 0 def
0 J 0 j 3.863690092612248 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 2.99991 2.99991 -90.00000 @w
19.40400 509.28520 m
69.61011 -22.89827 35.90362 118.28494 451.40400 118.28494 C
S

@rax %Note: Object
42.40403 103.28513 161.40416 507.28507 @E
/$fm 0 def
0 J 0 j 3.863690092612248 setmiterlimit
[3.96131 2.04067 ] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 2.00013 2.00013 -90.00000 @w
42.40403 507.28507 m
71.40416 138.28507 150.40403 218.28501 161.40416 103.28513 C
S

@rax %Note: Object
61.65411 136.78469 455.40425 518.58397 @E
/$fm 1 def
 0 O 0 @g
1.0000  create_grayscale_color set_solid_fill
421.36498 156.70205 m
433.09502 155.02706 L
444.39109 153.88809 L
455.40425 153.53518 L
449.90419 136.78469 L
440.65417 137.78476 L
430.15408 138.53509 L
416.90409 139.53515 L
401.15424 141.53499 L
386.65417 143.53512 L
375.40403 145.53496 L
366.65405 147.28507 L
355.90422 149.03518 L
343.15398 152.03509 L
334.40400 154.28494 L
325.15398 157.03512 L
315.15420 159.78501 L
304.65411 163.28494 L
292.90422 167.28520 L
281.15405 171.78520 L
271.40400 176.03518 L
261.15420 180.53518 L
252.65424 184.78517 L
244.90403 189.03515 L
234.65424 194.03518 L
226.40400 199.28494 L
217.40400 205.03502 L
205.40409 213.53499 L
195.15402 220.53515 L
186.15402 227.78504 L
179.90419 234.03515 L
170.90419 243.03515 L
159.90406 253.78498 L
148.40419 265.53515 L
141.40403 274.78517 L
134.15414 284.78494 L
128.90409 292.78517 L
121.40419 304.03502 L
116.15414 313.03502 L
111.90416 319.53515 L
107.40416 328.53515 L
102.40413 339.03496 L
95.90400 352.78498 L
91.65402 364.78517 L
86.65398 376.03502 L
83.90409 385.53506 L
80.65417 395.53512 L
77.65398 407.28501 L
75.65414 415.28494 L
74.15405 421.78507 L
72.90397 428.03518 L
71.15414 435.53509 L
69.15402 445.53515 L
67.65420 456.28498 L
64.90403 470.28501 L
63.90397 481.53515 L
62.40416 495.28517 L
61.65411 505.28494 L
61.65411 510.78501 L
71.79222 518.58397 L
72.30217 513.23017 L
73.58400 502.53817 L
75.30605 491.44195 L
78.40006 479.13109 L
81.52809 467.62809 L
85.52608 454.97310 L
89.41521 444.66321 L
93.75222 434.58321 L
98.51216 424.04910 L
102.65301 415.72403 L
107.39509 406.11005 L
111.40498 398.89106 L
117.16724 389.16510 L
122.39405 380.78107 L
127.90602 372.34205 L
133.69209 363.52602 L
142.28022 351.90595 L
150.00803 341.11219 L
156.87723 332.71002 L
163.88306 324.18397 L
170.59521 316.29203 L
175.42318 310.90904 L
180.37020 305.35597 L
185.01109 300.24113 L
191.39301 293.56498 L
197.58104 287.70406 L
204.44117 280.42498 L
214.00413 271.57294 L
223.12120 263.38819 L
230.33310 256.86397 L
239.24211 249.40517 L
247.01613 243.11707 L
254.94406 236.87518 L
263.64217 230.27301 L
271.58910 224.59408 L
278.66523 219.78709 L
286.38822 214.55121 L
294.32013 209.24220 L
302.10406 204.57921 L
310.55216 199.50917 L
319.40419 194.53408 L
328.00904 189.93317 L
337.58306 185.23304 L
349.44009 179.49912 L
357.26513 175.99011 L
365.22198 172.72998 L
375.65405 169.16003 L
385.45909 165.66094 L
397.25405 162.24406 L
409.67320 159.23820 L
421.36498 156.70205 L
@c
F

@rax %Note: Object
61.65411 136.78469 455.40425 518.58397 @E
/$fm 1 def
 0 O 0 @g
0.7255  create_grayscale_color set_solid_fill
421.36498 156.70205 m
433.09502 155.02706 L
444.39109 153.88809 L
455.40425 153.53518 L
449.90419 136.78469 L
440.65417 137.78476 L
430.15408 138.53509 L
416.90409 139.53515 L
401.15424 141.53499 L
386.65417 143.53512 L
375.40403 145.53496 L
366.65405 147.28507 L
355.90422 149.03518 L
343.15398 152.03509 L
334.40400 154.28494 L
325.15398 157.03512 L
315.15420 159.78501 L
304.65411 163.28494 L
292.90422 167.28520 L
281.15405 171.78520 L
271.40400 176.03518 L
261.15420 180.53518 L
252.65424 184.78517 L
244.90403 189.03515 L
234.65424 194.03518 L
226.40400 199.28494 L
217.40400 205.03502 L
205.40409 213.53499 L
195.15402 220.53515 L
186.15402 227.78504 L
179.90419 234.03515 L
170.90419 243.03515 L
159.90406 253.78498 L
148.40419 265.53515 L
141.40403 274.78517 L
134.15414 284.78494 L
128.90409 292.78517 L
121.40419 304.03502 L
116.15414 313.03502 L
111.90416 319.53515 L
107.40416 328.53515 L
102.40413 339.03496 L
95.90400 352.78498 L
91.65402 364.78517 L
86.65398 376.03502 L
83.90409 385.53506 L
80.65417 395.53512 L
77.65398 407.28501 L
75.65414 415.28494 L
74.15405 421.78507 L
72.90397 428.03518 L
71.15414 435.53509 L
69.15402 445.53515 L
67.65420 456.28498 L
64.90403 470.28501 L
63.90397 481.53515 L
62.40416 495.28517 L
61.65411 505.28494 L
61.65411 510.78501 L
71.79222 518.58397 L
72.30217 513.23017 L
73.58400 502.53817 L
75.30605 491.44195 L
78.40006 479.13109 L
81.52809 467.62809 L
85.52608 454.97310 L
89.41521 444.66321 L
93.75222 434.58321 L
98.51216 424.04910 L
102.65301 415.72403 L
107.39509 406.11005 L
111.40498 398.89106 L
117.16724 389.16510 L
122.39405 380.78107 L
127.90602 372.34205 L
133.69209 363.52602 L
142.28022 351.90595 L
150.00803 341.11219 L
156.87723 332.71002 L
163.88306 324.18397 L
170.59521 316.29203 L
175.42318 310.90904 L
180.37020 305.35597 L
185.01109 300.24113 L
191.39301 293.56498 L
197.58104 287.70406 L
204.44117 280.42498 L
214.00413 271.57294 L
223.12120 263.38819 L
230.33310 256.86397 L
239.24211 249.40517 L
247.01613 243.11707 L
254.94406 236.87518 L
263.64217 230.27301 L
271.58910 224.59408 L
278.66523 219.78709 L
286.38822 214.55121 L
294.32013 209.24220 L
302.10406 204.57921 L
310.55216 199.50917 L
319.40419 194.53408 L
328.00904 189.93317 L
337.58306 185.23304 L
349.44009 179.49912 L
357.26513 175.99011 L
365.22198 172.72998 L
375.65405 169.16003 L
385.45909 165.66094 L
397.25405 162.24406 L
409.67320 159.23820 L
421.36498 156.70205 L
@c
F

@rax %Note: Object
159.40403 99.28517 164.40406 104.28520 @E
/$fm 1 def
 0 O 0 @g
0.0000  create_grayscale_color set_solid_fill
159.40403 101.78476 m
159.40403 103.16608 160.52400 104.28520 161.90419 104.28520 C
163.28523 104.28520 164.40406 103.16608 164.40406 101.78476 C
164.40406 100.40428 163.28523 99.28517 161.90419 99.28517 C
160.52400 99.28517 159.40403 100.40428 159.40403 101.78476 C
@c
F

@rax %Note: Object
159.40403 99.28517 164.40406 104.28520 @E
/$fm 1 def
0 J 0 j 3.863710100215461 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 1.00006 1.00006 -90.00000 @w
159.40403 101.78476 m
159.40403 103.16608 160.52400 104.28520 161.90419 104.28520 C
163.28523 104.28520 164.40406 103.16608 164.40406 101.78476 C
164.40406 100.40428 163.28523 99.28517 161.90419 99.28517 C
160.52400 99.28517 159.40403 100.40428 159.40403 101.78476 C
@c
S

@rax %Note: Object
203.15424 101.78476 451.65402 116.28510 @E
/$fm 1 def
 0 O 0 @g
1.0000  create_grayscale_color set_solid_fill
451.15398 116.28510 m
431.15414 116.28510 L
418.15417 116.03509 L
403.65411 115.28476 L
392.15424 115.28476 L
378.15420 114.53471 L
364.65420 114.28469 L
348.15402 113.78494 L
330.65405 112.53515 L
315.40422 110.78476 L
298.15398 110.28472 L
275.90400 108.28517 L
256.65420 106.53506 L
238.65420 104.78494 L
219.90416 103.28513 L
203.15424 101.78476 L
451.65402 101.78476 L
451.15398 116.28510 L
@c
F

@rax %Note: Object
203.15424 101.78476 451.65402 116.28510 @E
/$fm 1 def
 0 O 0 @g
0.7255  create_grayscale_color set_solid_fill
451.15398 116.28510 m
431.15414 116.28510 L
418.15417 116.03509 L
403.65411 115.28476 L
392.15424 115.28476 L
378.15420 114.53471 L
364.65420 114.28469 L
348.15402 113.78494 L
330.65405 112.53515 L
315.40422 110.78476 L
298.15398 110.28472 L
275.90400 108.28517 L
256.65420 106.53506 L
238.65420 104.78494 L
219.90416 103.28513 L
203.15424 101.78476 L
451.65402 101.78476 L
451.15398 116.28510 L
@c
F

@rax -0.08391 52.25357 16.69181 78.56929 @E
[0.00028346 0.00000000 0.00000000 0.00028346 -1.59588976 52.68547087] @tm
 1 O 0 @g
0.0000  create_grayscale_color set_solid_fill
e
/_R1336934584666-ArialMT 126998.00000 z
0 0 (0) @t
T
@rax %Note: Object
90.90198 98.11871 97.90214 105.11915 @E
/$fm 1 def
 0 O 0 @g
0.0000  create_grayscale_color set_solid_fill
90.90198 101.61893 m
90.90198 103.55216 92.46898 105.11915 94.40220 105.11915 C
96.33515 105.11915 97.90214 103.55216 97.90214 101.61893 C
97.90214 99.68627 96.33515 98.11871 94.40220 98.11871 C
92.46898 98.11871 90.90198 99.68627 90.90198 101.61893 C
@c
F

@rax %Note: Object
90.90198 98.11871 97.90214 105.11915 @E
/$fm 1 def
0 J 0 j 3.863710100215461 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 1.00006 1.00006 -90.00000 @w
90.90198 101.61893 m
90.90198 103.55216 92.46898 105.11915 94.40220 105.11915 C
96.33515 105.11915 97.90214 103.55216 97.90214 101.61893 C
97.90214 99.68627 96.33515 98.11871 94.40220 98.11871 C
92.46898 98.11871 90.90198 99.68627 90.90198 101.61893 C
@c
S

@rax %Note: Object
251.90220 99.11906 258.90208 106.11893 @E
/$fm 1 def
 0 O 0 @g
0.0000  create_grayscale_color set_solid_fill
251.90220 102.61871 m
251.90220 104.55194 253.46920 106.11893 255.40214 106.11893 C
257.33509 106.11893 258.90208 104.55194 258.90208 102.61871 C
258.90208 100.68633 257.33509 99.11906 255.40214 99.11906 C
253.46920 99.11906 251.90220 100.68633 251.90220 102.61871 C
@c
F

@rax %Note: Object
251.90220 99.11906 258.90208 106.11893 @E
/$fm 1 def
0 J 0 j 3.863710100215461 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 1.00006 1.00006 -90.00000 @w
251.90220 102.61871 m
251.90220 104.55194 253.46920 106.11893 255.40214 106.11893 C
257.33509 106.11893 258.90208 104.55194 258.90208 102.61871 C
258.90208 100.68633 257.33509 99.11906 255.40214 99.11906 C
253.46920 99.11906 251.90220 100.68633 251.90220 102.61871 C
@c
S

@rax -38.73175 518.02129 -27.25994 531.00510 @E
[0.00028346 0.00000000 0.00000000 0.00028346 -39.59588976 518.28507087] @tm
 1 O 0 @g
0.0000  create_grayscale_color set_solid_fill
e
/_R1336934584666-ArialMT 84666.00000 z
0 0 (a) @t
T
@rax 432.26816 176.02129 471.74769 193.08898 @E
[0.00028346 0.00000000 0.00000000 0.00028346 431.40411024 176.28507087] @tm
 1 O 0 @g
0.0000  create_grayscale_color set_solid_fill
e
/_R1336934584666-ArialMT 84666.00000 z
0 0 (astr) @t
T
@rax 436.16806 62.24513 540.85096 84.54104 @E
[0.00028346 0.00000000 0.00000000 0.00028346 435.40411024 67.28507087] @tm
 1 O 0 @g
0.0000  create_grayscale_color set_solid_fill
e
/_R1336934584666-ArialMT 84666.00000 z
0 0 (gamma02) @t
T
@rax 238.99606 42.99704 268.61159 60.75694 @E
[0.00028346 0.00000000 0.00000000 0.00028346 236.40411024 43.28507087] @tm
 1 O 0 @g
0.0000  create_grayscale_color set_solid_fill
e
/_R1336934584666-ArialMT 84666.00000 z
0 0 (1/4) @t
T
@rax 77.78608 39.89735 107.47361 57.65726 @E
[0.00028346 0.00000000 0.00000000 0.00028346 75.19411024 40.18546087] @tm
 1 O 0 @g
0.0000  create_grayscale_color set_solid_fill
e
/_R1336934584666-ArialMT 84666.00000 z
0 0 (1/6) @t
T
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel17Dict 17.0 0
%%+ font ArialMT
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: -56 56 543 543 
%%LanguageLevel: 3
%%Creator: CorelDRAW X7
%%Title: SafonovA_ris11.EPS
%%CreationDate: Tue Nov 15 14:06:17 2022
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 3 def
%Build: CorelDRAW X7 Версия 17.6.0.1021
/EpsFile true def
%%BeginResource: procset wCorel17Dict 17.0 0
/wCorel17Dict 300 dict def wCorel17Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Text support
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch 0 1 $fe length 1 sub{/encodingIndex xd dup
$fe encodingIndex get eq{$fe encodingIndex/.notdef put}if}for put 1 add}ifelse
}forall pop}if dup 256 dict dup/$met xd/Metrics exch put dup/FontMatrix get 0
get 1000 mul 1 exch div 3 index length 256 eq{0 1 255{dup $fe exch get dup
/.notdef eq{pop pop}{5 index 3 -1 roll get 2 index mul $met 3 1 roll put}
ifelse}for}if pop definefont pop pop}bd/CorelIsValidCharpath{pathbbox 3 -1 roll
sub abs 0.5 ge 3 1 roll sub abs 0.5 ge and}bd/@ftx{{currentpoint 3 -1 roll(0)
dup 3 -1 roll 0 exch put dup @gs true charpath $ctm setmatrix
CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/gradient_fill ld @ftx}{$fil 3 eq{/@@txt
/@Pf ld @ftx}{$fil 4 eq{/@@txt/output_shading_gradient ld @ftx}{FillOverprint
safe_setoverprint FillColor/separate_set_color dexec{show}{pop}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix
currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint
safe_setoverprint OutlineColor/separate_set_color dexec{{currentpoint 3 -1 roll
(0)dup 3 -1 roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat
stroke @gr @np stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr
@st}bd/@t@a{dup @gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}
def}bd/o{/t{pop}def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm
setmatrix/$ttm matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll
m $ttm concat ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd
/@l{}bd/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null
def/_bithibyte 0 def
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel17Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%BeginResource: font ArialMT
%!FontType1-1.0: ArialMT 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /ArialMT def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdup 97 /a putdup 115 /s putdup 116 /t putdup 114 /r putdup 103 /g putdup 109 /m putdup 50 /two putdup 49 /one putdup 112 /p putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B1AA08303530A8334DBB6DA762F219BB186D34BFF5BB367EE1EE776D397D5EFF50A08FE6BD2C08BA26DF4CC
16F29AFF3B3CA862E21F74FE624B1AF995E30D78E795FAE4248EDA12C19E71E756D910BDAF74C9E2DCD61708FBCBEAB44AC8FF60C81B41842F2FFADED37EC72D
BD947B0E804FC0D6BEB62FF098F51F0171599B3D1B0D6AE366BC86ED26F35F063ADE10B739EE3CAFB2842DF25E63ADA1EDD6D25436042E6B1C0EC95766E568A3
6D766C4A3A98A219E059E51AFAECDC99192BCE80B425CA8B47AE3EE25F170EA178599C6AAF0ECC2FD76942E127E0D7436BD5DDFE62C8FBAB2B5A5AC23149CF3C
A1469610BA765688D48A5959819801ADC773F2F69413BDDCF614AAEE19E0BF327DE32C07FB1BA7929F28FAAA36A8DBDD5E1270F72BA1848F353FF4DBFA81E272
3737663A20EE94C15EF4280509869501DECBF97536D3B562D10DE41866602C57A000D3528AD20A9AB943F7556B95D54202184E1ECEE8D84D09CF96642C90C184
ABC8C3B9524FF4CC69F19C0D9B8B48D53DA4E5B704704384E334BB207EFF97794030EE14747E5EACA35A47D0C5920E7CB3BCDB3682F0CE62EC915234AD3A501C
065F20B3516A9607AC3401C412443DDF43E470609DB1A0F23B13C3E8A6AEC28EF3E8AEEF34023649FCEBDC95FB830B5CC4FAEAA4A4CDFA484F985045E381FD18
138FE62D6015EB01B76AF58B50626358BA7EB1DB26F2CF91819C0092E41D7838F73A4E78F1D9BAA32BDF445B6F910535277044649B16B8709D3C339994CFFE69
DC396BB0C652F03A95C0F78080D6B2AE10446F208E9AC8BFC7A848E9676BDF9849C5A5A8AEBB9BC39B9A1011B7A0FAFCF0FB9F3032D7D930678069C1CCF0EDA7
9AB59C263FA539D5577E6B7ED6CE0128F4F3C31E9D956E1ED652AA6BA6357084FB2D6EBD69FEA4C43BED8FD08D88F214CAEC77253052D27F0471B548EEE5A2C7
DC2586E443B8CA05F2F67DB250F3DBD1F47A7F58730312E2AE6CDB46C6D026CD9A15139895985779108B67E116DB94838E5BD6F9CA551DEDC28B3FB1A8E7C1F9
E80E9C4061E24AEFB5CDBB70B6FDC526A196F63599098F44B7592BB70EA0B6B8A0C09907B1AED3EE130A508081C278231AAB1313BCF9C95282869CCAC6BAD946
DB43485E6DD4BE6D6197399245E8350E34E289BBCD5218F5BCF32749C90AF44FD13C9F89521052C59383405FC487773625D551FB2A81FD837FB11BB53DEB4DFA
416213BEAC53F721CAFC1D4A4A370E63A3700715288308B5E97AB539262B462DF5C407DB00412DDBA4D4F3EFBF339F4CE845FA92397DBC8DC7D3494D54D486A8
F02D729464111224970522F8D1F64154426F21128D1A94EA63E91B426AF50E073AD5E62501ABFB7AE316899F98FD38886AA7FA2BB17800A28BC1EDED5A5F80A1
B5947F1E21DC64FC9CBA96E621958E3CA1C34B4FCC5539E609F851DE43E537BA8E3F3739749F73B72424C303BD1016DE1DD611E6939AC8987CC0D13EC088123A
A33B930C43706F39117E944DCCA8416960A323450F756DDBBFBFD493E2190D28C13ED51AA84C1D1578B25968E290B9A3253DF6271C2E9FD8D2A125BDB2DE0E27
C40D2233093E7DC613ADCA012E3321C3EFC09835751842443708391DF540F6EEB53ACADC9EE57FBDEDD7DA3868911DDC2B303AD335172BFEB378423CE1BA7045
D741D80F6250BFCF4BDAD7EC505B45D7600BBE5B1B9A54AEBE58EE4FE900EB7EC7175059B2792D94702134C9A5DB8F4BA232A7B3706858B67B9EDED852979C74
AA04E717C6201853249A9A85675CDDE3481057416FB92B7BD629A22A054ACEBB66694A0046459DFB2F7D6252E07C024AF9F433DC4F507E84977F4790AE749886
002798FA59ED978DB0F67DD4CF32A949AED3A841C9170FD90C4AEC7E76580D86C526542BD27DA3AD2EF74398CE85D57F7761EC782DE6D1A737C11FC7B585FA73
C913974551F2A800EB7443BBCF01172686BF92AE801C8E4A56724F36277273CD537B358807E01FF0D41861F612AD00DF04FBD42128B28CEA90F7608E3A578959
B5227F69B585C9EF105BC83976606EA41585FCF570CFEFC2D82FA27A76FAF3B02965561576448D562C316BDEA164A2CFB783F7C413357B60B8658A31B9D80D6D
D747FF3102364A61A630137DD50F51C3807D465E1BB1DE5973CF75019187B2FC6F8DE19EF358C2F187ED27BC3A17451375557CB2B1EC81DD950B9AF2C536B5A1
259A0B74A707F3FF8148554E9734495F02B2C7B5C49A0BDA8A595B5697811711F11EEBE2038E74DD7B0A521EC1FAEF03459D0D513AEBF4EF360859BB2B020C9D
5F959E6F98607A003C4BD520A04C3E1F6380003BB237DCA7F1C7000F8FFB5CBFCDC6FE7EE041D0261F7101E56DD65F7105AF059D51D6FFBFC75C4849BE1698DE
AF2D82FB10E5B0B72DD74150B8231BE00B5C984C0A6884C2668223D2D424186032B8B921D2D00CD664D2D0DCA5BA2DAD3A83735A6D0B754B6E388C737516E46C
23136292ABB2F2C710C64B0E7A3D6559E49C7C474AE5780722B676636066AA19DD0B02312F8EC5C1081F46E950876647C263B4EC7374309D96D8E1D3F6208467
FED35446462AB9A0962582B50111FA7AFB72D04C392FA466A364C162DDF246F203E46D650355B4C10EDE1768862474B6FB50199C2F24C82AFF0E2BBC4EEEAA52
DA3C2BD6713ADCB3A62623EC11C07DB804F1
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 
750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 278 
278 355 556 556 889 667 191 333 333 389 584 278 333 278 278 556 
556 556 556 556 556 556 556 556 556 278 278 584 584 584 556 1015 
667 667 722 722 667 611 778 722 278 500 667 556 833 722 778 667 
778 722 667 611 722 667 944 667 667 611 278 278 278 469 556 333 
556 556 500 556 556 278 556 556 222 222 500 222 833 556 556 556 
556 333 500 278 556 500 722 500 500 500 334 260 334 584 750 865 
542 222 365 333 1000 556 556 556 1000 1057 333 1010 583 854 719 556 
222 222 333 333 350 556 1000 750 1000 906 333 813 438 556 552 278 
635 500 500 556 489 260 556 668 737 719 556 584 333 737 278 400 
549 278 222 411 576 537 333 556 1073 510 556 222 667 500 278 667 
656 667 542 677 667 923 604 719 719 583 656 833 722 778 719 667 
722 611 635 760 667 740 667 917 938 792 885 656 719 1010 722 556 
573 531 365 584 556 669 459 559 559 438 584 688 552 556 542 556 
500 458 500 823 500 573 521 802 823 625 719 521 510 750 542 ]
CorelDrawReencodeVect /_R1336934584666-ArialMT /ArialMT Z

%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 487 599
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
-2.41654 102.10450 -2.41540 533.40803 @E
/$fm 1 def
0 J 0 j 3.863690092612248 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 2.00013 2.00013 -90.00000 @w
-2.41597 533.40803 m
-2.41597 102.10450 L
S

@rax %Note: Object
-6.41594 532.74217 1.58428 542.74224 @E
/$fm 0 def
 0 O 0 @g
0.0000  create_grayscale_color set_solid_fill
-2.41597 532.74217 m
-6.41594 532.74217 L
-2.41597 542.74224 L
1.58428 532.74217 L
-2.41597 532.74217 L
@c
F

@rax %Note: Object
-2.54608 102.73521 454.62699 103.14850 @E
/$fm 0 def
0 J 0 j 3.863690092612248 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 2.00013 2.00013 -90.00000 @w
-2.54608 102.73521 m
454.62699 103.14850 L
S

@rax %Note: Object
453.96113 99.14854 463.96120 107.14847 @E
/$fm 0 def
 0 O 0 @g
0.0000  create_grayscale_color set_solid_fill
453.96113 103.14850 m
453.96113 107.14847 L
463.96120 103.14850 L
453.96113 99.14854 L
453.96113 103.14850 L
@c
F

@rax %Note: Object
65.41115 157.06205 447.32409 521.23521 @E
/$fm 0 def
0 J 0 j 3.863690092612248 setmiterlimit
[] 0 d 0 R 0 @G
0.4000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 5.66929 5.66929 -90.00000 @w
65.41115 521.23521 m
73.95902 368.05720 284.11795 159.96416 447.32409 157.06205 C
S

@rax %Note: Object
56.36693 120.23518 447.45420 517.06205 @E
/$fm 0 def
0 J 0 j 3.863690092612248 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 2.99991 2.99991 -90.00000 @w
56.36693 517.06205 m
62.71994 403.23600 30.73465 144.11764 447.45420 120.23518 C
S

@rax %Note: Object
16.45398 141.23480 446.45414 513.23499 @E
/$fm 0 def
0 J 0 j 3.863690092612248 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 2.99991 2.99991 -90.00000 @w
16.45398 513.23499 m
25.11780 357.99024 62.25109 163.25405 446.45414 141.23480 C
S

@rax %Note: Object
57.82904 142.82192 447.64611 520.65808 @E
/$fm 1 def
 0 O 0 @g
1.0000  create_grayscale_color set_solid_fill
57.82904 516.73521 m
64.57918 520.65808 L
65.66797 507.66123 L
68.59106 489.77717 L
72.68202 473.69820 L
75.40413 464.55307 L
82.35496 445.76419 L
92.42220 422.44413 L
104.76510 399.29613 L
118.74813 377.01524 L
134.30098 354.11216 L
149.03717 334.78413 L
165.33496 315.62702 L
180.43115 299.03811 L
195.80910 283.68000 L
217.08397 263.85619 L
239.23106 245.41115 L
258.45194 230.76000 L
281.02195 215.18306 L
301.79197 202.23609 L
326.22803 189.06520 L
351.90595 177.39921 L
379.80198 167.11909 L
400.94504 161.63603 L
447.64611 155.70198 L
446.56413 142.82192 L
417.71310 144.26334 L
388.58910 147.34913 L
363.45713 150.85984 L
334.68094 155.35587 L
316.55594 158.64009 L
293.03008 164.41115 L
252.39912 175.67320 L
227.86696 184.60403 L
199.56699 196.58126 L
182.32611 205.33011 L
167.62507 213.70224 L
155.53814 221.46208 L
144.80617 228.80324 L
134.25902 236.89899 L
118.77109 254.94208 L
107.05805 272.40605 L
96.83206 290.26006 L
88.35619 308.54806 L
81.19106 326.42617 L
75.45005 344.97524 L
68.92894 371.20309 L
64.58315 397.94315 L
62.40217 417.56400 L
61.25301 434.27424 L
60.15203 447.70224 L
59.59701 472.53798 L
58.99606 488.88624 L
57.82904 516.73521 L
@c
F

@rax %Note: Object
57.82904 142.82192 447.64611 520.65808 @E
/$fm 1 def
 0 O 0 @g
0.7255  create_grayscale_color set_solid_fill
57.82904 516.73521 m
64.57918 520.65808 L
65.66797 507.66123 L
68.59106 489.77717 L
72.68202 473.69820 L
75.40413 464.55307 L
82.35496 445.76419 L
92.42220 422.44413 L
104.76510 399.29613 L
118.74813 377.01524 L
134.30098 354.11216 L
149.03717 334.78413 L
165.33496 315.62702 L
180.43115 299.03811 L
195.80910 283.68000 L
217.08397 263.85619 L
239.23106 245.41115 L
258.45194 230.76000 L
281.02195 215.18306 L
301.79197 202.23609 L
326.22803 189.06520 L
351.90595 177.39921 L
379.80198 167.11909 L
400.94504 161.63603 L
447.64611 155.70198 L
446.56413 142.82192 L
417.71310 144.26334 L
388.58910 147.34913 L
363.45713 150.85984 L
334.68094 155.35587 L
316.55594 158.64009 L
293.03008 164.41115 L
252.39912 175.67320 L
227.86696 184.60403 L
199.56699 196.58126 L
182.32611 205.33011 L
167.62507 213.70224 L
155.53814 221.46208 L
144.80617 228.80324 L
134.25902 236.89899 L
118.77109 254.94208 L
107.05805 272.40605 L
96.83206 290.26006 L
88.35619 308.54806 L
81.19106 326.42617 L
75.45005 344.97524 L
68.92894 371.20309 L
64.58315 397.94315 L
62.40217 417.56400 L
61.25301 434.27424 L
60.15203 447.70224 L
59.59701 472.53798 L
58.99606 488.88624 L
57.82904 516.73521 L
@c
F

@rax %Note: Object
9.13266 111.97332 448.68898 512.85515 @E
/$fm 1 def
 0 O 0 @g
1.0000  create_grayscale_color set_solid_fill
447.70394 118.48507 m
417.72898 121.22561 L
402.97209 122.31553 L
386.45717 124.17449 L
373.96403 125.87046 L
354.97219 128.77625 L
334.85414 132.52394 L
317.70000 136.05959 L
304.19802 139.44983 L
290.95115 143.05861 L
277.34513 147.12803 L
262.69512 152.09008 L
244.49216 158.92526 L
228.73720 165.89820 L
211.26813 174.48605 L
198.63893 181.64608 L
187.73320 188.31713 L
175.98699 196.29808 L
162.74409 206.03225 L
150.35414 216.46998 L
143.92006 222.52309 L
134.75820 231.89301 L
131.91506 234.77726 L
123.76517 241.56000 L
112.57002 251.48920 L
105.94006 257.81499 L
99.42208 265.03313 L
92.42816 273.03222 L
84.34913 282.88403 L
76.41893 293.44422 L
68.90598 304.60507 L
60.65802 318.51213 L
53.64397 332.33301 L
47.42702 345.99798 L
39.48917 367.17222 L
33.52252 385.61216 L
28.04797 407.26006 L
24.30028 425.56025 L
21.01691 446.53606 L
18.27609 469.16306 L
16.86047 484.61414 L
15.74674 499.91924 L
14.93405 512.85515 L
9.13266 511.04013 L
9.20126 505.61206 L
9.98164 492.82299 L
10.83345 477.93600 L
11.97014 459.09326 L
13.32794 439.57417 L
15.31446 415.00006 L
16.84658 395.98101 L
19.15965 372.53424 L
21.40044 350.92120 L
24.65631 326.93924 L
27.09269 309.37011 L
30.26154 293.00315 L
33.56391 277.41402 L
36.88498 263.58009 L
40.50992 250.70117 L
44.83106 236.85024 L
49.75313 224.44299 L
55.50406 212.54712 L
63.07115 199.21918 L
72.05216 186.23906 L
81.74211 174.88517 L
93.08013 164.23313 L
101.83011 158.15424 L
111.45402 152.48523 L
123.43408 146.10472 L
140.66419 138.84718 L
159.41509 132.90236 L
177.61606 128.35531 L
197.57197 124.73291 L
231.44995 120.04072 L
266.52217 117.79143 L
300.70602 115.72469 L
327.35820 114.50494 L
355.79906 113.70416 L
373.41496 113.43402 L
393.99506 112.63465 L
408.72019 112.76079 L
431.61902 112.15928 L
448.68898 111.97332 L
447.70394 118.48507 L
@c
F

@rax %Note: Object
9.13266 111.97332 448.68898 512.85515 @E
/$fm 1 def
 0 O 0 @g
0.7255  create_grayscale_color set_solid_fill
447.70394 118.48507 m
417.72898 121.22561 L
402.97209 122.31553 L
386.45717 124.17449 L
373.96403 125.87046 L
354.97219 128.77625 L
334.85414 132.52394 L
317.70000 136.05959 L
304.19802 139.44983 L
290.95115 143.05861 L
277.34513 147.12803 L
262.69512 152.09008 L
244.49216 158.92526 L
228.73720 165.89820 L
211.26813 174.48605 L
198.63893 181.64608 L
187.73320 188.31713 L
175.98699 196.29808 L
162.74409 206.03225 L
150.35414 216.46998 L
143.92006 222.52309 L
134.75820 231.89301 L
131.91506 234.77726 L
123.76517 241.56000 L
112.57002 251.48920 L
105.94006 257.81499 L
99.42208 265.03313 L
92.42816 273.03222 L
84.34913 282.88403 L
76.41893 293.44422 L
68.90598 304.60507 L
60.65802 318.51213 L
53.64397 332.33301 L
47.42702 345.99798 L
39.48917 367.17222 L
33.52252 385.61216 L
28.04797 407.26006 L
24.30028 425.56025 L
21.01691 446.53606 L
18.27609 469.16306 L
16.86047 484.61414 L
15.74674 499.91924 L
14.93405 512.85515 L
9.13266 511.04013 L
9.20126 505.61206 L
9.98164 492.82299 L
10.83345 477.93600 L
11.97014 459.09326 L
13.32794 439.57417 L
15.31446 415.00006 L
16.84658 395.98101 L
19.15965 372.53424 L
21.40044 350.92120 L
24.65631 326.93924 L
27.09269 309.37011 L
30.26154 293.00315 L
33.56391 277.41402 L
36.88498 263.58009 L
40.50992 250.70117 L
44.83106 236.85024 L
49.75313 224.44299 L
55.50406 212.54712 L
63.07115 199.21918 L
72.05216 186.23906 L
81.74211 174.88517 L
93.08013 164.23313 L
101.83011 158.15424 L
111.45402 152.48523 L
123.43408 146.10472 L
140.66419 138.84718 L
159.41509 132.90236 L
177.61606 128.35531 L
197.57197 124.73291 L
231.44995 120.04072 L
266.52217 117.79143 L
300.70602 115.72469 L
327.35820 114.50494 L
355.79906 113.70416 L
373.41496 113.43402 L
393.99506 112.63465 L
408.72019 112.76079 L
431.61902 112.15928 L
448.68898 111.97332 L
447.70394 118.48507 L
@c
F

@rax %Note: Object
7.45398 110.23483 451.45417 511.23515 @E
/$fm 1 def
0 J 0 j 3.863690092612248 setmiterlimit
[] 0 d 0 R 0 @G
0.4000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 5.66929 5.66929 -90.00000 @w
7.45398 511.23515 m
29.54551 115.36724 57.49002 117.24151 451.45417 110.23483 C
S

@rax -2.53786 56.94718 8.64595 74.49109 @E
[0.00028346 0.00000000 0.00000000 0.00028346 -3.54593701 57.23511811] @tm
 1 O 0 @g
0.0000  create_grayscale_color set_solid_fill
e
/_R1336934584666-ArialMT 84666.00000 z
0 0 (0) @t
T
@rax -55.68180 514.97121 -44.20998 527.95502 @E
[0.00028346 0.00000000 0.00000000 0.00028346 -56.54593701 515.23511811] @tm
 1 O 0 @g
0.0000  create_grayscale_color set_solid_fill
e
/_R1336934584666-ArialMT 84666.00000 z
0 0 (a) @t
T
@rax 413.31798 192.97134 452.79751 210.03902 @E
[0.00028346 0.00000000 0.00000000 0.00028346 412.45406299 193.23511811] @tm
 1 O 0 @g
0.0000  create_grayscale_color set_solid_fill
e
/_R1336934584666-ArialMT 84666.00000 z
0 0 (astr) @t
T
@rax 438.21808 64.19509 542.90098 86.49099 @E
[0.00028346 0.00000000 0.00000000 0.00028346 437.45406299 69.23511811] @tm
 1 O 0 @g
0.0000  create_grayscale_color set_solid_fill
e
/_R1336934584666-ArialMT 84666.00000 z
0 0 (gamma02) @t
T
@rax 11.31817 113.45896 68.97742 135.49096 @E
[0.00028346 0.00000000 0.00000000 0.00028346 10.45406299 118.23511811] @tm
 1 O 0 @g
0.0000  create_grayscale_color set_solid_fill
e
/_R1336934584666-ArialMT 84666.00000 z
0 0 (a1pm) @t
T
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel17Dict 17.0 0
%%+ font ArialMT
%%EOF

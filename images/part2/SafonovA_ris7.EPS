%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: -34 34 536 536 
%%LanguageLevel: 3
%%Creator: CorelDRAW X7
%%Title: SafonovA_ris7.EPS
%%CreationDate: Tue Nov 15 13:57:02 2022
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 3 def
%Build: CorelDRAW X7 Версия 17.6.0.1021
/EpsFile true def
%%BeginResource: procset wCorel17Dict 17.0 0
/wCorel17Dict 300 dict def wCorel17Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Text support
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch 0 1 $fe length 1 sub{/encodingIndex xd dup
$fe encodingIndex get eq{$fe encodingIndex/.notdef put}if}for put 1 add}ifelse
}forall pop}if dup 256 dict dup/$met xd/Metrics exch put dup/FontMatrix get 0
get 1000 mul 1 exch div 3 index length 256 eq{0 1 255{dup $fe exch get dup
/.notdef eq{pop pop}{5 index 3 -1 roll get 2 index mul $met 3 1 roll put}
ifelse}for}if pop definefont pop pop}bd/CorelIsValidCharpath{pathbbox 3 -1 roll
sub abs 0.5 ge 3 1 roll sub abs 0.5 ge and}bd/@ftx{{currentpoint 3 -1 roll(0)
dup 3 -1 roll 0 exch put dup @gs true charpath $ctm setmatrix
CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/gradient_fill ld @ftx}{$fil 3 eq{/@@txt
/@Pf ld @ftx}{$fil 4 eq{/@@txt/output_shading_gradient ld @ftx}{FillOverprint
safe_setoverprint FillColor/separate_set_color dexec{show}{pop}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix
currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint
safe_setoverprint OutlineColor/separate_set_color dexec{{currentpoint 3 -1 roll
(0)dup 3 -1 roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat
stroke @gr @np stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr
@st}bd/@t@a{dup @gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}
def}bd/o{/t{pop}def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm
setmatrix/$ttm matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll
m $ttm concat ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd
/@l{}bd/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null
def/_bithibyte 0 def
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel17Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%BeginResource: font ArialMT
%!FontType1-1.0: ArialMT 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /ArialMT def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 97 /a putdup 115 /s putdup 116 /t putdup 114 /r putdup 103 /g putdup 109 /m putdup 48 /zero putdup 50 /two putdup 49 /one putdup 47 /slash putdup 54 /six putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B1AA151D4BCABD1D45DDAEF20FC93DC3E74EA7E80159C16E0BB8F3CB46B99949EDFC075E6BBED1B0FE88929
9E415BBBC67E8375DD87ECEF638B211DA999A2D0ED03AE74FB708DD22604EAB80E88DF3CD82F0E39EF28DE6ECB56A93A5F1E57089965EF530BB52BFC56B82994
772AC5A4C5A635E21FBCE4D0AA2BAE09A24EC6EDBB2C75655A7B49F0B26286A134806D8FA156B068839E6138E6BD9F60BA585925B5AA5C7AD5450860A8EB936F
AE22050AB118FDB84FE995917F4D65F1E08277432C825563ED87FD869B7DFE78A94E92151E9D33E4186E4CF2799A6FAA8125B52B1AA22C23D49E986F010DCB8F
F0BE776BA6C82C0CBE09B0F9A0562D11885638AAAABDEC7B12D95FD3B962FF7AC8F94C997ADB8A248EC4414543A60AB8BFAC438BE7E32406841DB90B0B828AF5
77BC5E51FFDAC01CCF8D0051BC2DAE13AC6823DC60A9E99345AEA0C37B4A51F7F972B38E86FC4EBE42A8FF063805D27919860F827247B33CDEC0AB2D56219B0B
0362EB65837C89B5B6266C5436796FB60302496B0D435BE969732E37980A694E001751F5898555B48513672C3577AAD67162574123EA7A028E7C35E5F84316A1
E32EE9B0DAAF0DFCD6F5F21933DEF516EF16DF22420CF1BBA84FA4100F36FAB8C96AAA29D4848D0D91E1385D5ECB8A928A1432B6EB5E833E1AE17B02509112FB
F318F88E4F750D7196A1E76BFA06294724FE2609356DFCECEDA8A099FB9B2ADBBCBFFBB2C61706EDDE0A4F23F6F885B892F25FB97B0A435952AE7EA3B25F32E9
6891F4F50AE9BB8D4BBE0AE99968666C7A86649FB3CAD2DD2182949886D3CFA7A36F5FA964A137048DAB14D4B1AFBC8750658A30E97A3BA6E3AC51468757FE05
80CF0C99AAF7E2C7A913ABF607492A6E7E1DAAE9318DC41559F6E6E071358F829254C8B0E61A1DABE6948A7849E30198141D4D7F02CF3C97FF349EEDED148283
984B287E120C6C49B3C473E2381C249F1CB35CAC47D2D39FDE2C905CD414470B23FDEF7EAF347BA7327AB8448CFE5E35F9C7F6703D0A2DC834F1BCAF996AA59D
B3312084A57657534AFB8F06EDC543BBAFB568CB2F41927118B35636942997A265D6FB2857F6470A76D2F2C1AE9E68FCDD0C015F9FE5278298637CCCBDEC5174
7DEDF1461C0C8F199243216DDAF7CF95F901CD69FB24AE04860DC138F941B81A6D8C8C37EAD0DB1F5EF089906BEB140782479F342C188B06970CEF0D9B42315A
953010C714A4A9A8C8417D9FEAD7111840C8EA02B435AAF4658DD54E41C3A21115F4369BE61B674C437399C578895B4AC7C572E5D629499B36552503FAFC464E
DEAA875D4ED5D79653D553D935D5B0D33BDDC1A307C7FB52E604009425F7DAE5B1B61FA79330329D31504C1586F98F4444B4D5EA8E7C95346CCCF6853A94454F
00A570F4AE4D6CAC732799E26BB5D2F35DEB515DC1603FCE8765F5DFC90A8E7EAAF6EEA04BAEB91595E2B72E764E9A5DAABCA2647C2C85838B4E20E8DCBABDA4
1C51B676B5E0304D8B7F710D27666001C2F8D324FD77F9DFA313F84EB4AFB7C72E9FC917D662BC38A20490BB9F5DFDAD8E167580E2BF79667D0DDA59E526B0A0
E302C296C11613EB6A18B39073D6C23B0FEEF534D7DD5A547FCD8133C7A3964E47E54042C008E404A8CB8BB3C63F1CFCD82EF5E53CA0A0AC1BEDFBCF41A09028
2D69678DBE92A05740ADBA69083A880378C20A1B41B76566D8578268CFD62698626CBADC7C6555FDD1C3D05A53FA294D4DE9D8B58815FAFE07743B6157A50365
F1751B3E74C8C3B0F192304033D5D1429583090C55E94036AE3A7C1D0008B2057372B1C75AC8B2B6C862BDFFADDED6B6D7CF94F6D3C6E0C265EE9341BE4EB4D8
A23BBDA9BD7BFED267D44B624E6CC93E3E0FC89A1E0CEBD879213820DBE7D12AD31AE04C917743928A95FBC8792320EB7BE4CB7F6A53E6980B6043EC306AF8A5
B5920D5592093A8730E4AF0E61BF221CE55879300385A916CB5EE5369E6F556869EC8C6EBC335960B8AA4AD998A4D5303193C7782E3CF69EEFADFD996D09031D
6AF9784B38E15C1223D501A82F405D8E891124A7C95C197CA0E85A3DEDEFC2C76955E392173AD608DBBB48A2983B33BBAF4E04A5F830A58880BEEC174FCB1573
85247FF7ED32A4F67E2DDF1C458D791FC426502FF72A50E514A8144AE5E6F8CBAD1F13EC2C9E0132D98BD293E6D2745B861CFCD686E2EF851225D1D7CDB35F74
27DA51CFE4A80CFE09A2CAD4F8F7F2B321B109AA5855F689490F1DCF7648D916A36AFC8E7FF198A883F87B69D2BADCD25BAEB9D97319570E3477B41E072AD825
7A793B4EFC2D7F1FB0EC18E5C7FE3AE96EEEF2BF0280A9769DD555E1D30447A041047C30C31AF47401497912A3FA6B8C9427F6CA7C4531253BEEB8A7ED8BD504
7F0A98240DDCE186EB3EDC4CD78DBFEB408F2DD178916FF2A2DBBA8A692882C558A49B995EE36034692487CD1F8F66976FB68B304DD0F8A4B07AC133D1A0A5FB
ED49DB8E793BD39DDC4D609E3C44B10C26164944108F9378291FDC6FFCFEF7C7ED23DB6889D40584DE47262C61A0185011520317A57152B02A99307FC536B70A
B805DA15D2849A9DCBD96B36BB3155F7B2D1B27007268A88A731D95CFB7FDD7CAFB915B027A0368693700FBB01E6A05091F116568C3C71D78939BCF2E2F266A2
6B798E5804D1A1AA7671569688E6E0C56C7E349FFB7B80E8D495C29368A4C738B2E02AC58B529F24BDE0F830403E357FB5F7A97834C4D088D9F5122FACEF263C
09BB944BD0638B10B991F01AC6BE5511BC41D1DBD7CBA9DE601C7EC1A00179127D748726D004A18140E752839862D5C2BC5C25C9F009AC9D00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 
750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 278 
278 355 556 556 889 667 191 333 333 389 584 278 333 278 278 556 
556 556 556 556 556 556 556 556 556 278 278 584 584 584 556 1015 
667 667 722 722 667 611 778 722 278 500 667 556 833 722 778 667 
778 722 667 611 722 667 944 667 667 611 278 278 278 469 556 333 
556 556 500 556 556 278 556 556 222 222 500 222 833 556 556 556 
556 333 500 278 556 500 722 500 500 500 334 260 334 584 750 865 
542 222 365 333 1000 556 556 556 1000 1057 333 1010 583 854 719 556 
222 222 333 333 350 556 1000 750 1000 906 333 813 438 556 552 278 
635 500 500 556 489 260 556 668 737 719 556 584 333 737 278 400 
549 278 222 411 576 537 333 556 1073 510 556 222 667 500 278 667 
656 667 542 677 667 923 604 719 719 583 656 833 722 778 719 667 
722 611 635 760 667 740 667 917 938 792 885 656 719 1010 722 556 
573 531 365 584 556 669 459 559 559 438 584 688 552 556 542 556 
500 458 500 823 500 573 521 802 823 625 719 521 510 750 542 ]
CorelDrawReencodeVect /_R1336934584666-ArialMT /ArialMT Z

%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 501 570
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
7.58353 95.10491 7.58466 526.40816 @E
/$fm 1 def
0 J 0 j 3.863690092612248 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 2.00013 2.00013 -90.00000 @w
7.58409 526.40816 m
7.58409 95.10491 L
S

@rax %Note: Object
3.58413 525.74202 11.58406 535.74208 @E
/$fm 0 def
 0 O 0 @g
0.0000  create_grayscale_color set_solid_fill
7.58409 525.74202 m
3.58413 525.74202 L
7.58409 535.74208 L
11.58406 525.74202 L
7.58409 525.74202 L
@c
F

@rax %Note: Object
7.45398 95.73506 464.62706 96.14835 @E
/$fm 0 def
0 J 0 j 3.863690092612248 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 2.00013 2.00013 -90.00000 @w
7.45398 95.73506 m
464.62706 96.14835 L
S

@rax %Note: Object
463.96091 92.14838 473.96098 100.14831 @E
/$fm 0 def
 0 O 0 @g
0.0000  create_grayscale_color set_solid_fill
463.96091 96.14835 m
463.96091 100.14831 L
473.96098 96.14835 L
463.96091 92.14838 L
463.96091 96.14835 L
@c
F

@rax %Note: Object
75.41093 150.06217 457.32416 514.23506 @E
/$fm 0 def
0 J 0 j 3.863690092612248 setmiterlimit
[] 0 d 0 R 0 @G
0.5882  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 5.66929 5.66929 -90.00000 @w
75.41093 514.23506 m
83.95909 361.05704 294.11802 152.96428 457.32416 150.06217 C
S

@rax %Note: Object
66.36699 133.23515 452.45395 510.06217 @E
/$fm 0 def
0 J 0 j 3.863690092612248 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 2.99991 2.99991 -90.00000 @w
66.36699 510.06217 m
74.72098 360.36510 196.46306 147.90614 452.45395 133.23515 C
S

@rax %Note: Object
44.45405 96.32409 453.45402 505.23506 @E
/$fm 0 def
0 J 0 j 3.863690092612248 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 2.99991 2.99991 -90.00000 @w
44.45405 505.23506 m
79.15890 137.36013 157.79594 91.19169 273.45402 96.73512 C
298.31811 97.92709 334.91707 108.23868 361.95392 110.73515 C
390.34290 113.35663 423.62306 112.44501 453.45402 110.73515 C
S

@rax %Note: Object
58.45408 97.23515 278.60088 504.23528 @E
/$fm 0 def
0 J 0 j 3.863690092612248 setmiterlimit
[3.96131 2.04067 ] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 2.00013 2.00013 -90.00000 @w
58.45408 504.23528 m
87.45392 135.23528 315.45411 198.23528 273.45402 97.23515 C
S

@rax %Note: Object
14.45414 96.00917 89.33811 506.23512 @E
/$fm 0 def
0 J 0 j 3.863690092612248 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 2.99991 2.99991 -90.00000 @w
14.45414 506.23512 m
19.45389 381.23518 31.53203 172.76910 37.45389 148.23524 C
50.81839 92.86781 96.20391 72.48501 88.45398 132.23509 C
84.58413 162.07313 54.13124 296.75820 50.45414 320.23502 C
37.45389 403.23515 32.86233 472.25424 31.45408 503.23521 C
S

@rax %Note: Object
21.45402 95.23502 76.45408 500.23502 @E
/$fm 0 def
0 J 0 j 3.863690092612248 setmiterlimit
[3.96131 2.04067 ] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 2.00013 2.00013 -90.00000 @w
21.45402 500.23502 m
50.45414 129.23518 62.18419 203.68715 76.45408 95.23502 C
S

@rax %Note: Object
270.45411 94.23524 275.45414 99.23528 @E
/$fm 1 def
 0 O 0 @g
0.0000  create_grayscale_color set_solid_fill
270.45411 96.73512 m
270.45411 98.11616 271.57408 99.23528 272.95398 99.23528 C
274.33502 99.23528 275.45414 98.11616 275.45414 96.73512 C
275.45414 95.35465 274.33502 94.23524 272.95398 94.23524 C
271.57408 94.23524 270.45411 95.35465 270.45411 96.73512 C
@c
F

@rax %Note: Object
270.45411 94.23524 275.45414 99.23528 @E
/$fm 1 def
0 J 0 j 3.863710100215461 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 1.00006 1.00006 -90.00000 @w
270.45411 96.73512 m
270.45411 98.11616 271.57408 99.23528 272.95398 99.23528 C
274.33502 99.23528 275.45414 98.11616 275.45414 96.73512 C
275.45414 95.35465 274.33502 94.23524 272.95398 94.23524 C
271.57408 94.23524 270.45411 95.35465 270.45411 96.73512 C
@c
S

@rax %Note: Object
73.95392 92.73515 78.95395 97.73518 @E
/$fm 1 def
 0 O 0 @g
0.0000  create_grayscale_color set_solid_fill
73.95392 95.23502 m
73.95392 96.61606 75.07389 97.73518 76.45408 97.73518 C
77.83512 97.73518 78.95395 96.61606 78.95395 95.23502 C
78.95395 93.85455 77.83512 92.73515 76.45408 92.73515 C
75.07389 92.73515 73.95392 93.85455 73.95392 95.23502 C
@c
F

@rax %Note: Object
73.95392 92.73515 78.95395 97.73518 @E
/$fm 1 def
0 J 0 j 3.863710100215461 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 1.00006 1.00006 -90.00000 @w
73.95392 95.23502 m
73.95392 96.61606 75.07389 97.73518 76.45408 97.73518 C
77.83512 97.73518 78.95395 96.61606 78.95395 95.23502 C
78.95395 93.85455 77.83512 92.73515 76.45408 92.73515 C
75.07389 92.73515 73.95392 93.85455 73.95392 95.23502 C
@c
S

@rax %Note: Object
8.70406 96.61011 67.95411 505.48507 @E
/$fm 1 def
 0 O 0 @g
1.0000  create_grayscale_color set_solid_fill
8.82907 505.48507 m
12.82904 505.23506 L
13.07906 499.23524 L
13.45408 490.61027 L
13.82910 482.23502 L
14.45414 471.23518 L
14.95389 459.23528 L
15.45392 447.23509 L
16.07896 437.48504 L
16.70400 423.98504 L
17.20403 411.48510 L
17.82907 399.23518 L
18.57912 389.73515 L
18.95414 378.36028 L
19.70391 368.48523 L
20.20394 360.61002 L
20.45395 352.98510 L
20.82898 346.11024 L
21.20400 340.61017 L
21.57902 334.48507 L
21.82904 327.73521 L
22.20406 322.36016 L
22.70409 314.73524 L
22.82910 308.98517 L
23.20413 302.23502 L
23.95389 294.48510 L
24.32891 286.98520 L
25.20397 277.98520 L
25.45398 267.86013 L
26.45405 255.73521 L
27.07909 246.11017 L
27.70413 236.61014 L
28.45389 228.36019 L
28.70391 218.98517 L
29.57896 209.48513 L
30.32901 198.86003 L
31.32907 189.36028 L
31.95411 180.98504 L
32.82917 171.23528 L
33.95395 160.61017 L
34.95402 153.61002 L
36.07909 147.98523 L
37.07915 143.11020 L
38.82898 138.11017 L
40.70409 132.48510 L
42.82894 127.73509 L
45.20409 122.73506 L
47.70397 118.11005 L
49.82910 114.61011 L
52.57899 110.86016 L
54.95414 107.61024 L
58.45408 103.73528 L
62.20403 100.61008 L
65.57896 97.98520 L
67.95411 96.73512 L
8.70406 96.61011 L
8.82907 505.48507 L
@c
F

@rax %Note: Object
8.70406 96.61011 67.95411 505.48507 @E
/$fm 1 def
 0 O 0 @g
0.7255  create_grayscale_color set_solid_fill
8.82907 505.48507 m
12.82904 505.23506 L
13.07906 499.23524 L
13.45408 490.61027 L
13.82910 482.23502 L
14.45414 471.23518 L
14.95389 459.23528 L
15.45392 447.23509 L
16.07896 437.48504 L
16.70400 423.98504 L
17.20403 411.48510 L
17.82907 399.23518 L
18.57912 389.73515 L
18.95414 378.36028 L
19.70391 368.48523 L
20.20394 360.61002 L
20.45395 352.98510 L
20.82898 346.11024 L
21.20400 340.61017 L
21.57902 334.48507 L
21.82904 327.73521 L
22.20406 322.36016 L
22.70409 314.73524 L
22.82910 308.98517 L
23.20413 302.23502 L
23.95389 294.48510 L
24.32891 286.98520 L
25.20397 277.98520 L
25.45398 267.86013 L
26.45405 255.73521 L
27.07909 246.11017 L
27.70413 236.61014 L
28.45389 228.36019 L
28.70391 218.98517 L
29.57896 209.48513 L
30.32901 198.86003 L
31.32907 189.36028 L
31.95411 180.98504 L
32.82917 171.23528 L
33.95395 160.61017 L
34.95402 153.61002 L
36.07909 147.98523 L
37.07915 143.11020 L
38.82898 138.11017 L
40.70409 132.48510 L
42.82894 127.73509 L
45.20409 122.73506 L
47.70397 118.11005 L
49.82910 114.61011 L
52.57899 110.86016 L
54.95414 107.61024 L
58.45408 103.73528 L
62.20403 100.61008 L
65.57896 97.98520 L
67.95411 96.73512 L
8.70406 96.61011 L
8.82907 505.48507 L
@c
F

@rax %Note: Object
291.32901 97.11014 453.82904 110.61014 @E
/$fm 1 def
 0 O 0 @g
1.0000  create_grayscale_color set_solid_fill
453.20400 108.86003 m
442.70391 109.61008 L
427.45408 110.11011 L
408.95405 110.61014 L
393.20391 110.61014 L
380.70397 110.23512 L
366.32891 109.36006 L
353.32894 107.98526 L
339.95395 105.73512 L
326.95398 103.23524 L
314.07902 100.98510 L
303.32891 98.86025 L
291.32901 97.11014 L
453.82904 97.23515 L
453.20400 108.86003 L
@c
F

@rax %Note: Object
291.32901 97.11014 453.82904 110.61014 @E
/$fm 1 def
 0 O 0 @g
0.7255  create_grayscale_color set_solid_fill
453.20400 108.86003 m
442.70391 109.61008 L
427.45408 110.11011 L
408.95405 110.61014 L
393.20391 110.61014 L
380.70397 110.23512 L
366.32891 109.36006 L
353.32894 107.98526 L
339.95395 105.73512 L
326.95398 103.23524 L
314.07902 100.98510 L
303.32891 98.86025 L
291.32901 97.11014 L
453.82904 97.23515 L
453.20400 108.86003 L
@c
F

@rax 3.96595 47.20365 20.74167 73.51937 @E
[0.00028346 0.00000000 0.00000000 0.00028346 2.45403150 47.63554961] @tm
 1 O 0 @g
0.0000  create_grayscale_color set_solid_fill
e
/_R1336934584666-ArialMT 126998.00000 z
0 0 (0) @t
T
@rax %Note: Object
368.28709 92.23512 375.28696 99.23528 @E
/$fm 1 def
 0 O 0 @g
0.0000  create_grayscale_color set_solid_fill
368.28709 95.73506 m
368.28709 97.66828 369.85408 99.23528 371.78702 99.23528 C
373.71997 99.23528 375.28696 97.66828 375.28696 95.73506 C
375.28696 93.80239 373.71997 92.23512 371.78702 92.23512 C
369.85408 92.23512 368.28709 93.80239 368.28709 95.73506 C
@c
F

@rax %Note: Object
368.28709 92.23512 375.28696 99.23528 @E
/$fm 1 def
0 J 0 j 3.863710100215461 setmiterlimit
[] 0 d 0 R 0 @G
0.0000  create_grayscale_color set_outline
[0.00000001 1.00000000 -1.00000000 0.00000001 0.00000000 0.00000000] 1 1.00006 1.00006 -90.00000 @w
368.28709 95.73506 m
368.28709 97.66828 369.85408 99.23528 371.78702 99.23528 C
373.71997 99.23528 375.28696 97.66828 375.28696 95.73506 C
375.28696 93.80239 373.71997 92.23512 371.78702 92.23512 C
369.85408 92.23512 368.28709 93.80239 368.28709 95.73506 C
@c
S

@rax %Note: Object
67.82003 134.73524 457.45398 513.53405 @E
/$fm 1 def
 0 O 0 @g
1.0000  create_grayscale_color set_solid_fill
423.41499 151.65213 m
435.14504 149.97713 L
446.44110 148.83817 L
457.45398 148.48526 L
452.20394 134.73524 L
443.06306 135.14117 L
432.14202 136.35808 L
418.75710 137.83124 L
404.25392 139.90422 L
391.06091 142.44718 L
380.72693 144.61512 L
371.48910 146.91713 L
360.11197 149.69509 L
350.33216 152.61024 L
342.73814 155.15603 L
335.17106 157.55924 L
320.21206 163.10920 L
309.97191 167.42013 L
301.32397 171.23726 L
292.42205 175.31603 L
283.01301 180.14315 L
275.76510 184.07622 L
267.04205 188.94302 L
261.27609 192.26211 L
254.73997 196.77628 L
246.02910 202.05326 L
238.59893 207.34809 L
230.78891 213.00123 L
221.36315 220.26416 L
213.38702 227.00920 L
206.03594 233.29616 L
198.76394 239.78211 L
188.41493 249.51005 L
176.28208 262.23109 L
168.14608 271.57521 L
159.87798 281.28926 L
153.71802 289.15824 L
147.47216 297.43512 L
141.04800 306.52611 L
135.54312 314.67912 L
129.33099 324.33109 L
123.14891 334.35014 L
117.53802 344.18126 L
110.57017 357.90520 L
106.70797 365.48306 L
103.06517 373.63408 L
99.33591 382.16523 L
95.21291 391.59921 L
91.66507 401.04425 L
88.98605 408.56910 L
86.06013 416.63225 L
82.52391 428.30702 L
79.49197 438.90123 L
76.80302 449.97109 L
73.79405 464.18627 L
71.41209 475.67707 L
69.84198 489.61304 L
68.71890 499.81408 L
67.82003 509.90513 L
73.84195 513.53405 L
74.35191 508.18025 L
75.63402 497.48825 L
77.35606 486.39203 L
80.45008 474.08117 L
83.57811 462.57817 L
87.57609 449.92318 L
91.46494 439.61329 L
95.80195 429.53329 L
100.56189 418.99918 L
104.70302 410.67411 L
109.44510 401.06013 L
113.45499 393.84113 L
119.21698 384.11518 L
124.44406 375.73115 L
129.95603 367.29213 L
135.74211 358.47609 L
144.32995 346.85603 L
152.05805 336.06227 L
158.92696 327.66009 L
165.93307 319.13405 L
172.64494 311.24211 L
177.47291 305.85912 L
182.41994 300.30605 L
187.06110 295.19121 L
193.44302 288.51506 L
199.63106 282.65414 L
206.49090 275.37506 L
216.05414 266.52302 L
225.17093 258.33827 L
232.38312 251.81405 L
241.29213 244.35524 L
249.06614 238.06715 L
256.99408 231.82526 L
265.69191 225.22309 L
273.63912 219.54416 L
280.71496 214.73717 L
288.43795 209.50129 L
296.37014 204.19228 L
304.15408 199.52929 L
312.60217 194.45924 L
321.45392 189.48416 L
330.05906 184.88324 L
339.63307 180.18312 L
351.49011 174.44920 L
359.31515 170.94019 L
367.27200 167.68006 L
377.70406 164.11011 L
387.50910 160.61102 L
399.30406 157.19414 L
411.72293 154.18828 L
423.41499 151.65213 L
@c
F

@rax %Note: Object
67.82003 134.73524 457.45398 513.53405 @E
/$fm 1 def
 0 O 0 @g
0.7255  create_grayscale_color set_solid_fill
423.41499 151.65213 m
435.14504 149.97713 L
446.44110 148.83817 L
457.45398 148.48526 L
452.20394 134.73524 L
443.06306 135.14117 L
432.14202 136.35808 L
418.75710 137.83124 L
404.25392 139.90422 L
391.06091 142.44718 L
380.72693 144.61512 L
371.48910 146.91713 L
360.11197 149.69509 L
350.33216 152.61024 L
342.73814 155.15603 L
335.17106 157.55924 L
320.21206 163.10920 L
309.97191 167.42013 L
301.32397 171.23726 L
292.42205 175.31603 L
283.01301 180.14315 L
275.76510 184.07622 L
267.04205 188.94302 L
261.27609 192.26211 L
254.73997 196.77628 L
246.02910 202.05326 L
238.59893 207.34809 L
230.78891 213.00123 L
221.36315 220.26416 L
213.38702 227.00920 L
206.03594 233.29616 L
198.76394 239.78211 L
188.41493 249.51005 L
176.28208 262.23109 L
168.14608 271.57521 L
159.87798 281.28926 L
153.71802 289.15824 L
147.47216 297.43512 L
141.04800 306.52611 L
135.54312 314.67912 L
129.33099 324.33109 L
123.14891 334.35014 L
117.53802 344.18126 L
110.57017 357.90520 L
106.70797 365.48306 L
103.06517 373.63408 L
99.33591 382.16523 L
95.21291 391.59921 L
91.66507 401.04425 L
88.98605 408.56910 L
86.06013 416.63225 L
82.52391 428.30702 L
79.49197 438.90123 L
76.80302 449.97109 L
73.79405 464.18627 L
71.41209 475.67707 L
69.84198 489.61304 L
68.71890 499.81408 L
67.82003 509.90513 L
73.84195 513.53405 L
74.35191 508.18025 L
75.63402 497.48825 L
77.35606 486.39203 L
80.45008 474.08117 L
83.57811 462.57817 L
87.57609 449.92318 L
91.46494 439.61329 L
95.80195 429.53329 L
100.56189 418.99918 L
104.70302 410.67411 L
109.44510 401.06013 L
113.45499 393.84113 L
119.21698 384.11518 L
124.44406 375.73115 L
129.95603 367.29213 L
135.74211 358.47609 L
144.32995 346.85603 L
152.05805 336.06227 L
158.92696 327.66009 L
165.93307 319.13405 L
172.64494 311.24211 L
177.47291 305.85912 L
182.41994 300.30605 L
187.06110 295.19121 L
193.44302 288.51506 L
199.63106 282.65414 L
206.49090 275.37506 L
216.05414 266.52302 L
225.17093 258.33827 L
232.38312 251.81405 L
241.29213 244.35524 L
249.06614 238.06715 L
256.99408 231.82526 L
265.69191 225.22309 L
273.63912 219.54416 L
280.71496 214.73717 L
288.43795 209.50129 L
296.37014 204.19228 L
304.15408 199.52929 L
312.60217 194.45924 L
321.45392 189.48416 L
330.05906 184.88324 L
339.63307 180.18312 L
351.49011 174.44920 L
359.31515 170.94019 L
367.27200 167.68006 L
377.70406 164.11011 L
387.50910 160.61102 L
399.30406 157.19414 L
411.72293 154.18828 L
423.41499 151.65213 L
@c
F

@rax -33.68183 517.97112 -22.21002 530.95493 @E
[0.00028346 0.00000000 0.00000000 0.00028346 -34.54596850 518.23514961] @tm
 1 O 0 @g
0.0000  create_grayscale_color set_solid_fill
e
/_R1336934584666-ArialMT 84666.00000 z
0 0 (a) @t
T
@rax 421.31792 170.97137 460.79745 188.03906 @E
[0.00028346 0.00000000 0.00000000 0.00028346 420.45403150 171.23514961] @tm
 1 O 0 @g
0.0000  create_grayscale_color set_solid_fill
e
/_R1336934584666-ArialMT 84666.00000 z
0 0 (astr) @t
T
@rax 431.21792 57.19521 535.90082 79.49112 @E
[0.00028346 0.00000000 0.00000000 0.00028346 430.45403150 62.23514961] @tm
 1 O 0 @g
0.0000  create_grayscale_color set_solid_fill
e
/_R1336934584666-ArialMT 84666.00000 z
0 0 (gamma02) @t
T
@rax 358.04608 34.94721 387.73361 52.70712 @E
[0.00028346 0.00000000 0.00000000 0.00028346 355.45403150 35.23514961] @tm
 1 O 0 @g
0.0000  create_grayscale_color set_solid_fill
e
/_R1336934584666-ArialMT 84666.00000 z
0 0 (1/6) @t
T
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel17Dict 17.0 0
%%+ font ArialMT
%%EOF
